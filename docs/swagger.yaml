openapi: 3.0.0
info:
  title: PROYECTO APIRESTFULL TIENDA VIRTUAL DESARROLLO GRUPO_2
  description: API RESTful para gestión de usuarios, roles, facturas y pagos
  version: 1.0.0

servers:
  - url: http://localhost:3001
    description: Servidor de desarrollo

components:
  securitySchemes:
    bearerAuth:
      type: http
      scheme: bearer
      bearerFormat: JWT

  schemas:
    # Schemas del sistema de usuarios
    User:
      type: object
      properties:
        id:
          type: integer
        email:
          type: string
          format: email
        password:
          type: string
        createdAt:
          type: string
          format: date-time
        updatedAt:
          type: string
          format: date-time

    UserProfile:
      type: object
      properties:
        firstName:
          type: string
        middleName:
          type: string
        lastName:
          type: string
        phone:
          type: string
        email:
          type: string
        idAddress:
          type: integer

    Role:
      type: object
      properties:
        id:
          type: integer
        roleName:
          type: string
        createdAt:
          type: string
          format: date-time
        updatedAt:
          type: string
          format: date-time

    # Schemas del sistema de facturas
    Invoice:
      type: object
      properties:
        id:
          type: integer
        idUser:
          type: integer
        total:
          type: number
          format: float
        createdAt:
          type: string
          format: date-time
        updatedAt:
          type: string
          format: date-time

    Payment:
      type: object
      properties:
        id:
          type: integer
        idInvoice:
          type: integer
        amount:
          type: number
          format: float
        paymentDate:
          type: string
          format: date-time
        status:
          type: string
          enum: [pending, success, failed]
        createdAt:
          type: string
          format: date-time
        updatedAt:
          type: string
          format: date-time

    InvoiceDetail:
      type: object
      properties:
        id:
          type: integer
        idInvoice:
          type: integer
        idProduct:
          type: integer
        quantity:
          type: integer
        createdAt:
          type: string
          format: date-time
        updatedAt:
          type: string
          format: date-time

    Product:
      type: object
      properties:
        id:
          type: integer
        name:
          type: string
        price:
          type: number
          format: float

paths:
  # Rutas de autenticación y usuarios
  /api/users/register:
    post:
      summary: Registrar un nuevo usuario
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - firstName
                - lastName
                - email
                - password
                - idAddress
              properties:
                firstName:
                  type: string
                middleName:
                  type: string
                lastName:
                  type: string
                phone:
                  type: string
                  pattern: '^\d{10}$'
                email:
                  type: string
                  format: email
                password:
                  type: string
                  minLength: 6
                idAddress:
                  type: integer
      responses:
        '201':
          description: Usuario registrado exitosamente
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: "Usuario registrado"
                  user:
                    type: object
                    properties:
                      userId:
                        type: integer
                      peopleId:
                        type: integer
        '400':
          description: Error en los datos de entrada
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    example: "El usuario ya existe"

  /api/users/login:
    post:
      summary: Iniciar sesión
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - email
                - password
              properties:
                email:
                  type: string
                  format: email
                password:
                  type: string
      responses:
        '200':
          description: Login exitoso
          content:
            application/json:
              schema:
                type: object
                properties:
                  token:
                    type: string
        '400':
          description: Credenciales inválidas

  # Rutas de perfil de usuario
  /api/users/profile:
    get:
      summary: Obtener perfil del usuario
      security:
        - bearerAuth: []
      responses:
        '200':
          description: Perfil obtenido exitosamente
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                  data:
                    type: object
                    properties:
                      user:
                        $ref: '#/components/schemas/UserProfile'
        '401':
          description: No autorizado

  /api/users/profile/{userId}:
    put:
      summary: Actualizar perfil de usuario
      security:
        - bearerAuth: []
      parameters:
        - in: path
          name: userId
          required: true
          schema:
            type: integer
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UserProfile'
      responses:
        '200':
          description: Perfil actualizado exitosamente
        '400':
          description: Error en la actualización
        '401':
          description: No autorizado

    delete:
      summary: Eliminar perfil de usuario
      security:
        - bearerAuth: []
      parameters:
        - in: path
          name: userId
          required: true
          schema:
            type: integer
      responses:
        '200':
          description: Perfil eliminado exitosamente
        '404':
          description: Usuario no encontrado

  # Rutas de roles
  /api/roles:
    get:
      summary: Obtener todos los roles
      responses:
        '200':
          description: Lista de roles obtenida exitosamente
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Role'

    post:
      summary: Crear nuevo rol
      security:
        - bearerAuth: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - roleName
              properties:
                roleName:
                  type: string
      responses:
        '201':
          description: Rol creado exitosamente
        '400':
          description: Error en la creación del rol

  # Rutas de facturas
  /api/invoices:
    post:
      summary: Crear nueva factura
      security:
        - bearerAuth: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - idUser
                - total
              properties:
                idUser:
                  type: integer
                total:
                  type: number
      responses:
        '201':
          description: Factura creada exitosamente
        '400':
          description: Error en los datos de entrada

    get:
      summary: Obtener todas las facturas
      security:
        - bearerAuth: []
      responses:
        '200':
          description: Lista de facturas obtenida exitosamente
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Invoice'

  /api/invoices/{id}:
    get:
      summary: Obtener factura por ID
      security:
        - bearerAuth: []
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: integer
      responses:
        '200':
          description: Factura encontrada
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Invoice'
        '404':
          description: Factura no encontrada

    put:
      summary: Actualizar factura
      security:
        - bearerAuth: []
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: integer
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Invoice'
      responses:
        '200':
          description: Factura actualizada exitosamente
        '404':
          description: Factura no encontrada

    delete:
      summary: Eliminar factura
      security:
        - bearerAuth: []
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: integer
      responses:
        '204':
          description: Factura eliminada exitosamente
        '404':
          description: Factura no encontrada

  # Endpoints especializados de facturas
  /api/users/{userId}/payments/total:
    get:
      summary: Obtener total de pagos de un usuario
      security:
        - bearerAuth: []
      parameters:
        - in: path
          name: userId
          required: true
          schema:
            type: integer
      responses:
        '200':
          description: Total de pagos obtenido exitosamente
          content:
            application/json:
              schema:
                type: object
                properties:
                  total:
                    type: number

  /api/users/{userId}/invoices-payments:
    get:
      summary: Obtener usuario con sus facturas y pagos
      security:
        - bearerAuth: []
      parameters:
        - in: path
          name: userId
          required: true
          schema:
            type: integer
      responses:
        '200':
          description: Información obtenida exitosamente
          content:
            application/json:
              schema:
                type: object
                properties:
                  user:
                    type: object
                    properties:
                      id:
                        type: integer
                      invoices:
                        type: array
                        items:
                          $ref: '#/components/schemas/Invoice'
  /api/invoices/{invoiceId}/payments-status:
    get:
      summary: Obtener estado de pagos por factura
      security:
        - bearerAuth: []
      parameters:
        - in: path
          name: invoiceId
          required: true
          schema:
            type: integer
      responses:
        '200':
          description: Estado de pagos obtenido exitosamente
          content:
            application/json:
              schema:
                type: array
                items:
                  type: object
                  properties:
                    status:
                      type: string
                    total:
                      type: number
        '404':
          description: Factura no encontrada

  /api/invoices/{invoiceId}/products:
    get:
      summary: Obtener productos y total de factura
      security:
        - bearerAuth: []
      parameters:
        - in: path
          name: invoiceId
          required: true
          schema:
            type: integer
      responses:
        '200':
          description: Productos y total obtenidos exitosamente
          content:
            application/json:
              schema:
                type: object
                properties:
                  details:
                    type: array
                    items:
                      $ref: '#/components/schemas/InvoiceDetail'
                  total:
                    type: number
        '404':
          description: Factura no encontrada

  # Rutas de pagos
  /api/payments:
    post:
      summary: Crear nuevo pago
      security:
        - bearerAuth: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - idInvoice
                - amount
              properties:
                idInvoice:
                  type: integer
                amount:
                  type: number
                  format: float
                status:
                  type: string
                  enum: [pending, success, failed]
                  default: pending
      responses:
        '201':
          description: Pago creado exitosamente
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Payment'
        '400':
          description: Error en los datos de entrada
        '404':
          description: Factura no encontrada

    get:
      summary: Obtener todos los pagos
      security:
        - bearerAuth: []
      responses:
        '200':
          description: Lista de pagos obtenida exitosamente
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Payment'

  /api/payments/{id}:
    get:
      summary: Obtener pago por ID
      security:
        - bearerAuth: []
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: integer
      responses:
        '200':
          description: Pago encontrado
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Payment'
        '404':
          description: Pago no encontrado

    put:
      summary: Actualizar pago
      security:
        - bearerAuth: []
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: integer
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Payment'
      responses:
        '200':
          description: Pago actualizado exitosamente
        '404':
          description: Pago no encontrado

    delete:
      summary: Eliminar pago
      security:
        - bearerAuth: []
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: integer
      responses:
        '204':
          description: Pago eliminado exitosamente
        '404':
          description: Pago no encontrado

  # Rutas de detalles de factura
  /api/invoice-details:
    post:
      summary: Crear nuevo detalle de factura
      security:
        - bearerAuth: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - idInvoice
                - idProduct
                - quantity
              properties:
                idInvoice:
                  type: integer
                idProduct:
                  type: integer
                quantity:
                  type: integer
      responses:
        '201':
          description: Detalle de factura creado exitosamente
        '400':
          description: Error en los datos de entrada
        '404':
          description: Factura o producto no encontrado

    get:
      summary: Obtener todos los detalles de factura
      security:
        - bearerAuth: []
      responses:
        '200':
          description: Lista de detalles obtenida exitosamente
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/InvoiceDetail'

  # Endpoints adicionales especializados
  /api/invoices/{invoiceId}/pending-payments:
    get:
      summary: Obtener pagos pendientes de una factura
      security:
        - bearerAuth: []
      parameters:
        - in: path
          name: invoiceId
          required: true
          schema:
            type: integer
      responses:
        '200':
          description: Pagos pendientes obtenidos exitosamente
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Payment'
        '404':
          description: Factura no encontrada

  /api/invoices/{invoiceId}/total-with-discount:
    get:
      summary: Obtener total de factura con descuento
      security:
        - bearerAuth: []
      parameters:
        - in: path
          name: invoiceId
          required: true
          schema:
            type: integer
        - in: query
          name: discount
          required: true
          schema:
            type: number
            description: Porcentaje de descuento
      responses:
        '200':
          description: Total con descuento calculado exitosamente
          content:
            application/json:
              schema:
                type: object
                properties:
                  total:
                    type: number
        '404':
          description: Factura no encontrada

  /api/invoices/{invoiceId}/total-with-taxes:
    get:
      summary: Calcular total de factura con impuestos
      security:
        - bearerAuth: []
      parameters:
        - in: path
          name: invoiceId
          required: true
          schema:
            type: integer
        - in: query
          name: taxRate
          required: true
          schema:
            type: number
            description: Porcentaje de impuestos
      responses:
        '200':
          description: Total con impuestos calculado exitosamente
          content:
            application/json:
              schema:
                type: object
                properties:
                  total:
                    type: number
        '404':
          description: Factura no encontrada

  /api/invoices/{invoiceId}/is-paid:
    get:
      summary: Verificar si una factura está completamente pagada
      security:
        - bearerAuth: []
      parameters:
        - in: path
          name: invoiceId
          required: true
          schema:
            type: integer
      responses:
        '200':
          description: Estado de pago verificado exitosamente
          content:
            application/json:
              schema:
                type: object
                properties:
                  isPaid:
                    type: boolean
        '404':
          description: Factura no encontrada